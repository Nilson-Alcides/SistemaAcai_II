@model SistemaAcai_II.Models.Comanda
@using SistemaAcai_II.Models.Constants
@inject SistemaAcai_II.Libraries.Login.LoginColaborador _colaborador

@{
    ViewData["Title"] = "Fechar Pedido";
    decimal totalComanda = 0;
}

<h1>Fechar Pedido</h1>

<!-- Exibir carrinho de compras -->
<h4>N° da Comanda # @Model.Id </h4>


<!-- Formulário para salvar a comanda -->
    <form asp-action="FechadaComanda" asp-controller="Comanda" method="post">
        <input type="hidden" asp-for="Desconto" />
        <input type="hidden" asp-for="RefFormasPagamento.Id" />
        <input type="hidden" asp-for="Id" />

        <div class="form-group col-6">
            <label asp-for="NomeCliente"></label>
            <input asp-for="NomeCliente" class="form-control" readonly />
        </div>

        <div class="form-group col-6">
            <label asp-for="DataAbertura"></label>
            <input asp-for="DataAbertura" type="date" class="form-control" readonly>

        </div>
        <div class="form-group col-6">
            <label asp-for="ValorTotal"></label>
            <input asp-for="ValorTotal" class="form-control" readonly>

        </div>
        @{
            totalComanda = Model.ValorTotal;
            ViewBag.TotalComanda = totalComanda;
        }
   
        <div id="formaPagamentoPrincipal" class="alert alert-secondary mt-3">
            Forma de Pagamento: <span id="formaPagamentoSelecionadaPrincipal">Não selecionada</span>
        </div>
        <!-- Exibir total da comanda - Adicione um ID para poder atualizar via JS -->
        <div class="alert alert-info">
            <h4>Total da Comanda: <span id="totalComandaDisplay">@totalComanda.ToString("C")</span></h4>
        </div>

        <div class="offset-md-4 col-md-6">
            <button type="button" class="btn btn-outline-primary me-2"
                    data-bs-toggle="modal" data-bs-target="#modalPagamento">
                Pagamento (Alt + p)
            </button>
            <button type="submit" id="btnSalvarComanda"
                    class="btn btn-outline-success me-2" disabled>
                Fechar Pedido (Alt + 5)
            </button>
        </div>

        <br />
    </form>



<!-- Modal de Seleção de Forma de Pagamento -->
<div class="modal fade" id="modalPagamento" tabindex="-1" aria-labelledby="modalPagamentoLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalPagamentoLabel">Selecione a Forma de Pagamento</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="formPagamento">
                    <div class="form-group">
                        @Html.DropDownListFor(model => model.RefFormasPagamento.Id, ViewBag.FormaPagamento as SelectList,
                                 "Selecione a forma de pagamento", htmlAttributes: new { @class = "form-control", id = "formaPagamento", style = "width: 70%;" })
                    </div>
                </form>

                <div class="mt-4">
                    <div class="box">
                        <dl class="dlist-align" hidden>
                            <dt>Subtotal: </dt>
                            <dd class="text-right" id="subtotalValue">
                                @(ViewBag.TotalComanda != null ? ((decimal)ViewBag.TotalComanda).ToString("C", new System.Globalization.CultureInfo("pt-BR")) : "R$ 0,00")
                            </dd>
                        </dl>
                        <dl class="dlist-align">

                            <dt>Valor Pago:</dt>
                            <dd>
                                <input id="valorPago"
                                       class="form-control form-control-sm dineiro"
                                       type="text"
                                       style="width: 100px;"
                                       placeholder="0,00" />
                            </dd>

                        </dl>
                        <dl class="dlist-align">
                            <dt>Troco:</dt>
                            <dd>
                                <input id="troco" class="form-control form-control-sm dineiro"
                                       type="text"
                                       style="width: 100px;"
                                       placeholder="0,00"
                                       readonly />
                            </dd>
                        </dl>
                        <dl class="dlist-align">
                            <dt>Desconto:</dt>
                            <dd>
                                <input asp-for="Desconto" id="desconto"
                                       class="form-control form-control-sm dineiro"
                                       type="text" style="width: 100px;"
                                       placeholder="0,00" />
                            </dd>
                        </dl>

                        <dl class="dlist-align">
                            <dt>Forma de Pagamento:</dt>
                            <dd class="text-right" id="formaPagamentoSelecionada">Nenhuma selecionada</dd>
                        </dl>

                        <dl class="dlist-align" id="detalhesDesconto" style="display: none;">
                            <dt>Desconto Aplicado:</dt>
                            <dd class="text-right" id="descontoAplicado">R$ 0,00</dd>
                        </dl>


                        <dl class="dlist-align">
                            <dt>Total a pagar:</dt>
                            <dd class="text-right text-success fw-bold" id="totalAPagar">
                                @{
                                    decimal total = ViewBag.TotalComanda != null ? (decimal)ViewBag.TotalComanda : 0;
                                    @total.ToString("N2", System.Globalization.CultureInfo.GetCultureInfo("pt-BR"))
                                }
                            </dd>
                        </dl>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar (Alt + x)</button>
                <button type="button" class="btn btn-primary" id="confirmarPagamento">Confirmar (Alt + c)</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>        

        $(document).ready(function () {
            var dadosPagamento = {
                formaPagamentoId: '',
                formaPagamentoTexto: '',
                desconto: 0,
                total: parseFloat('@(ViewBag.TotalComanda != null ? ViewBag.TotalComanda.ToString(System.Globalization.CultureInfo.InvariantCulture) : "0")'),
                valorPago: 0,
                troco: 0
            };

            var campoValorPago = $('#valorPago').closest('.dlist-align');
            var campoTroco = $('#valorPago').closest('.dlist-align').next('.dlist-align');

            $('#desconto').addClass('dinheiro');
            $('#valorPago').addClass('dinheiro');

            function atualizarVisibilidadeCamposDinheiro() {
                var formaPagamentoSelecionadaTexto = $('#formaPagamento option:selected').text().toLowerCase();
                if (formaPagamentoSelecionadaTexto.includes('dinheiro')) {
                    campoValorPago.show();
                    campoTroco.show();
                } else {
                    campoValorPago.hide();
                    campoTroco.hide();
                    $('#valorPago').val('');
                    $('#troco').val('');
                }
            }


            $('#desconto').on('blur', function () {
                var valorFormatado = $(this).val();
                var valorNumerico = parseFloat(valorFormatado.replace(/[^0-9,]/g, '').replace(',', '.'));
                dadosPagamento.desconto = isNaN(valorNumerico) ? 0 : valorNumerico;
                $(this).data('valorOriginal', valorFormatado);
                atualizarResumoPagamento();
            });

            $('#desconto').on('focus', function () {
                var valorOriginal = $(this).data('valorOriginal');
                if (valorOriginal) {
                    $(this).val(valorOriginal);
                }
            });

            $('#desconto').on('input', function () {
                atualizarResumoPagamento();
            });

            $('#formaPagamento').change(function () {
                atualizarResumoPagamento();
                atualizarVisibilidadeCamposDinheiro();
            });

            $('#valorPago').on('blur', function () {
                var valorFormatado = $(this).val();
                var valorNumerico = parseFloat(valorFormatado.replace(/[^0-9,]/g, '').replace(',', '.'));
                dadosPagamento.valorPago = isNaN(valorNumerico) ? 0 : valorNumerico;
                calcularTroco();
            });

            function calcularTroco() {
                dadosPagamento.troco = dadosPagamento.valorPago - dadosPagamento.total;
                $('#troco').val(formatarMoeda(dadosPagamento.troco));
            }

            $('#confirmarPagamento').click(function () {
                $('#desconto').trigger('blur');
                atualizarComandaPrincipal();
                $('#modalPagamento').modal('hide');
            });

            function atualizarResumoPagamento() {
                var subtotal = parseFloat('@(ViewBag.TotalComanda != null ? ViewBag.TotalComanda.ToString(System.Globalization.CultureInfo.InvariantCulture) : "0")');
                dadosPagamento.total = subtotal - dadosPagamento.desconto;
                dadosPagamento.formaPagamentoId = $('#formaPagamento').val();
                dadosPagamento.formaPagamentoTexto = $('#formaPagamento option:selected').text() || "Nenhuma selecionada";
                $('#totalAPagar').text(formatarMoeda(dadosPagamento.total));
                $('#formaPagamentoSelecionada').text(dadosPagamento.formaPagamentoTexto);
                calcularTroco();

                // 👉 Habilita ou desabilita o botão "Fechar Pedido"
                if (dadosPagamento.formaPagamentoId && dadosPagamento.formaPagamentoId !== "0") {
                    $('#btnSalvarComanda').prop('disabled', false);
                } else {
                    $('#btnSalvarComanda').prop('disabled', true);
                }

            }

            function atualizarComandaPrincipal() {
                $('#totalComandaDisplay').text(formatarMoeda(dadosPagamento.total));
                $('#formaPagamentoSelecionadaPrincipal').text(dadosPagamento.formaPagamentoTexto);
                $('#formaPagamentoPrincipal').text(dadosPagamento.formaPagamentoTexto);
                $('[name="Desconto"]').val(dadosPagamento.desconto.toFixed(2));
                $('[name="RefFormasPagamento.Id"]').val(dadosPagamento.formaPagamentoId);
            }

            function formatarMoeda(valor) {
                return valor.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });
            }

            atualizarVisibilidadeCamposDinheiro();
        });
    </script>

    <script>
        document.addEventListener('keydown', function (e) {
            const modalAberto = document.getElementById('modalPagamento')?.classList.contains('show');

            // Alt + P → Abrir modal de pagamento
            if (e.altKey && e.key.toLowerCase() === 'p' && !modalAberto) {
                const botaoPagamento = document.querySelector('button[data-bs-target="#modalPagamento"]');
                if (botaoPagamento) {
                    e.preventDefault();
                    botaoPagamento.click();
                }
            }

            // Alt + 5 → Fechar pedido
            if (e.altKey && e.key === '5' && !modalAberto) {
                const botaoFechar = document.getElementById('btnSalvarComanda');
                if (botaoFechar && !botaoFechar.disabled) {
                    e.preventDefault();
                    botaoFechar.click();
                }
            }

            // Alt + C → Confirmar pagamento no modal
            if (e.altKey && e.key.toLowerCase() === 'c' && modalAberto) {
                const btnConfirmar = document.getElementById('confirmarPagamento');
                if (btnConfirmar) {
                    e.preventDefault();
                    btnConfirmar.click();
                }
            }

            // Alt + X → Cancelar/fechar modal
            if (e.altKey && e.key.toLowerCase() === 'x' && modalAberto) {
                const btnFecharModal = document.querySelector('#modalPagamento .btn-close');
                if (btnFecharModal) {
                    e.preventDefault();
                    btnFecharModal.click();
                }
            }
        });
    </script>
}

